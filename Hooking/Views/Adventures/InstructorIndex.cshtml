@using Hooking.Services
@model IEnumerable<Hooking.Models.DTO.AdventureDTO>
@inject IAdventureService _adventureService;

@{
    ViewData["Title"] = "Avanture";
}

<h1>@ViewData["Title"]</h1>

<h4 style="color: red">@ViewData["Status"]</h4>

<p>
    <a asp-action="Create" asp-route-instructorId="@ViewData["InstructorId"]">Dodaj novu avanturu</a>
</p>


<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.InstructorName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Address)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.City)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Country)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MaxPersonCount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AverageGrade)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CancelationPolicyDescription)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.InstructorName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Address)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.City)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Country)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MaxPersonCount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AverageGrade)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CancelationPolicyDescription)
            </td>
            <td>
                <a asp-action="Details" asp-route-adventureId="@item.AdventureId">Detalji</a>
                @if (_adventureService.AdventureEditable(Guid.Parse(item.AdventureId)))
                {
                    <a asp-action="Edit" asp-route-id="@item.AdventureId">Ažuriraj</a>
                    <a asp-action="Delete" asp-route-adventureId="@item.AdventureId" asp-route-instructorId="@Guid.Parse(item.InstructorId)">Obriši</a>
                }
                else
                {

                    <a title="Za izabranu avanturu postoje rezervacije, pa ju je nemoguće izmeniti.">Ažuriraj</a>
                    <a title="Za izabranu avanturu postoje rezervacije, pa ju je nemoguće obrisati.">Obriši</a>
                }
                <a asp-controller="AdventureRealisations" asp-action="Create" asp-route-adventureId="@item.AdventureId">Dodaj termin</a>
                
            </td>
        </tr>
}
    </tbody>
</table>
